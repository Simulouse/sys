<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sim.sys.dao.StorageDao">

    <resultMap type="com.sim.sys.entity.Storage" id="storageMap">
        <result property="storageId" column="storage_id" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="DECIMAL"/>
        <result property="restNums" column="rest_nums" jdbcType="INTEGER"/>
        <result property="expiredTime" column="expired_time" jdbcType="DATE"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <association property="medicine" javaType="com.sim.sys.entity.Medicine">
            <result property="medicineId" column="medicine_id" jdbcType="VARCHAR"/>
            <result property="medicineName" column="medicine_name" jdbcType="VARCHAR"/>
        </association>
    </resultMap>

    <select id="findAllStorageByFilter" resultMap="storageMap">
        select
        s.storage_id, s.price, s.rest_nums, s.expired_time, s.order_id, s.state,
        m.medicine_id, m.medicine_name
        from storage s
            left join medicine m on m.medicine_id = s.medicine_id
        <where>
            <if test="expiredTime != null and expiredTime != ''">
                and s.expired_time = #{expiredTime}
            </if>
            <if test="state != null and state != -1">
                and s.state = #{state}
            </if>
            <if test="medicine != null">
                <if test="medicine.medicineName != null and medicine.medicineName != ''">
                    and m.medicine_name = #{medicine.medicineName}
                </if>
            </if>
            <if test="orderId != null and orderId != ''">
                and s.order_id = #{orderId}
            </if>
        </where>
    </select>

    <select id="findStorageByOrderId" resultMap="storageMap">
        select
            s.storage_id, s.price, s.rest_nums, s.expired_time, s.order_id,
            m.medicine_id, m.medicine_name
        from storage s
                 left join medicine m on m.medicine_id = s.medicine_id
        where order_id = #{orderId}
    </select>

    <insert id="insertStorageBatch" keyProperty="storageId">
        insert into storage(storage_id, price, rest_nums, expired_time, medicine_id, order_id) values
        <foreach collection="storages" separator="," item="storage">
        (#{storage.storageId}, #{storage.price}, #{storage.restNums}, #{storage.expiredTime}, #{storage.medicine.medicineId}, #{storage.orderId})
        </foreach>

    </insert>

    <update id="updateStorageRestNumsById">
        update storage
        set rest_nums = rest_nums - #{takeNums}
        where storage_id = #{storageId}
    </update>

    <update id="updateStorageStateById">
        update storage
        set state = #{state}
        where storage_id = #{storageId}
    </update>

<!--    <delete id="deleteStorageById">-->
<!--        delete from storage where storage_id = #{storageId}-->
<!--    </delete>-->

</mapper>

